
syntax = "proto3";
package rexecd;

service Rexecd {
  rpc Command(CommandRequest) returns (stream CommandResponse) {}
  rpc RegisterHost(RegisterHostRequest) returns (RegisterHostResponse) {}
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse) {}
}

message RegisterHostRequest {
  string fqdn = 1;
  string port = 2;
  bytes  private_key = 3;
  bytes  public_key = 4;
  KeyType key_type = 5;
}

message HostConnect {
  string fqdn = 1;
  string port = 2;
}

enum KeyType {
  ssh_rsa = 0;
  rsa_sha2_256 = 1;
  rsa_sha2_512 = 2;
  ssh_dsa = 3;
  ecdsa_sha2_nistp256 = 4;
  ecdsa_sha2_nistp384 = 5;
  ecdsa_sha2_nistp521 = 6;
  ssh_ed25519 = 7;
}

message RegisterHostResponse {
  int64 id = 1;
}

message RegisterUserRequest {
  string username = 1;
  string first_name = 2;
  string last_name = 3;
  bool   admin = 4;
}

message RegisterUserResponse {}

message CommandRequest {
  int64 id = 1;
  string cmd = 2;
  string username = 3;
  bytes private_key = 4;
  repeated HostConnect host_connect = 5;
  uint64 start_timestamp = 6;
  map<string, string> env = 7;
  bool distribute = 8;
}

message CommandResponse {
  int64 id = 1;
  bytes stdout = 2;
  bytes stderr = 3;
  int64 timestamp = 4;
  int64 exit_code = 5;
  string error_msg = 6;
}
