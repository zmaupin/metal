// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rexecd.proto

package rexecd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KeyType int32

const (
	KeyType_ssh_rsa             KeyType = 0
	KeyType_rsa_sha2_256        KeyType = 1
	KeyType_rsa_sha2_512        KeyType = 2
	KeyType_ssh_dsa             KeyType = 3
	KeyType_ecdsa_sha2_nistp256 KeyType = 4
	KeyType_ecdsa_sha2_nistp384 KeyType = 5
	KeyType_ecdsa_sha2_nistp521 KeyType = 6
	KeyType_ssh_ed25519         KeyType = 7
)

var KeyType_name = map[int32]string{
	0: "ssh_rsa",
	1: "rsa_sha2_256",
	2: "rsa_sha2_512",
	3: "ssh_dsa",
	4: "ecdsa_sha2_nistp256",
	5: "ecdsa_sha2_nistp384",
	6: "ecdsa_sha2_nistp521",
	7: "ssh_ed25519",
}

var KeyType_value = map[string]int32{
	"ssh_rsa":             0,
	"rsa_sha2_256":        1,
	"rsa_sha2_512":        2,
	"ssh_dsa":             3,
	"ecdsa_sha2_nistp256": 4,
	"ecdsa_sha2_nistp384": 5,
	"ecdsa_sha2_nistp521": 6,
	"ssh_ed25519":         7,
}

func (x KeyType) String() string {
	return proto.EnumName(KeyType_name, int32(x))
}

func (KeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{0}
}

type RegisterHostRequest struct {
	Fqdn                 string   `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	KeyType              KeyType  `protobuf:"varint,5,opt,name=key_type,json=keyType,proto3,enum=rexecd.KeyType" json:"key_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterHostRequest) Reset()         { *m = RegisterHostRequest{} }
func (m *RegisterHostRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterHostRequest) ProtoMessage()    {}
func (*RegisterHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{0}
}

func (m *RegisterHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterHostRequest.Unmarshal(m, b)
}
func (m *RegisterHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterHostRequest.Marshal(b, m, deterministic)
}
func (m *RegisterHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterHostRequest.Merge(m, src)
}
func (m *RegisterHostRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterHostRequest.Size(m)
}
func (m *RegisterHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterHostRequest proto.InternalMessageInfo

func (m *RegisterHostRequest) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

func (m *RegisterHostRequest) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *RegisterHostRequest) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *RegisterHostRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *RegisterHostRequest) GetKeyType() KeyType {
	if m != nil {
		return m.KeyType
	}
	return KeyType_ssh_rsa
}

type HostConnect struct {
	Fqdn                 string   `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostConnect) Reset()         { *m = HostConnect{} }
func (m *HostConnect) String() string { return proto.CompactTextString(m) }
func (*HostConnect) ProtoMessage()    {}
func (*HostConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{1}
}

func (m *HostConnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostConnect.Unmarshal(m, b)
}
func (m *HostConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostConnect.Marshal(b, m, deterministic)
}
func (m *HostConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostConnect.Merge(m, src)
}
func (m *HostConnect) XXX_Size() int {
	return xxx_messageInfo_HostConnect.Size(m)
}
func (m *HostConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_HostConnect.DiscardUnknown(m)
}

var xxx_messageInfo_HostConnect proto.InternalMessageInfo

func (m *HostConnect) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

func (m *HostConnect) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type RegisterHostResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterHostResponse) Reset()         { *m = RegisterHostResponse{} }
func (m *RegisterHostResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterHostResponse) ProtoMessage()    {}
func (*RegisterHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{2}
}

func (m *RegisterHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterHostResponse.Unmarshal(m, b)
}
func (m *RegisterHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterHostResponse.Marshal(b, m, deterministic)
}
func (m *RegisterHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterHostResponse.Merge(m, src)
}
func (m *RegisterHostResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterHostResponse.Size(m)
}
func (m *RegisterHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterHostResponse proto.InternalMessageInfo

func (m *RegisterHostResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RegisterUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Admin                bool     `protobuf:"varint,4,opt,name=admin,proto3" json:"admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{3}
}

func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (m *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(m, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterUserRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RegisterUserRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *RegisterUserRequest) GetAdmin() bool {
	if m != nil {
		return m.Admin
	}
	return false
}

type RegisterUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserResponse) Reset()         { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()    {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{4}
}

func (m *RegisterUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserResponse.Unmarshal(m, b)
}
func (m *RegisterUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserResponse.Marshal(b, m, deterministic)
}
func (m *RegisterUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserResponse.Merge(m, src)
}
func (m *RegisterUserResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterUserResponse.Size(m)
}
func (m *RegisterUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserResponse proto.InternalMessageInfo

type CommandRequest struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cmd                  string         `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Username             string         `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	HostConnect          []*HostConnect `protobuf:"bytes,4,rep,name=host_connect,json=hostConnect,proto3" json:"host_connect,omitempty"`
	StartTimestamp       uint64         `protobuf:"varint,5,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	Distribute           bool           `protobuf:"varint,6,opt,name=distribute,proto3" json:"distribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{5}
}

func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (m *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(m, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

func (m *CommandRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CommandRequest) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *CommandRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CommandRequest) GetHostConnect() []*HostConnect {
	if m != nil {
		return m.HostConnect
	}
	return nil
}

func (m *CommandRequest) GetStartTimestamp() uint64 {
	if m != nil {
		return m.StartTimestamp
	}
	return 0
}

func (m *CommandRequest) GetDistribute() bool {
	if m != nil {
		return m.Distribute
	}
	return false
}

type CommandResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Stdout               []byte   `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte   `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ExitCode             int64    `protobuf:"varint,5,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5a97cdcf024307f, []int{6}
}

func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResponse.Unmarshal(m, b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
}
func (m *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(m, src)
}
func (m *CommandResponse) XXX_Size() int {
	return xxx_messageInfo_CommandResponse.Size(m)
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

func (m *CommandResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CommandResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *CommandResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *CommandResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CommandResponse) GetExitCode() int64 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func init() {
	proto.RegisterEnum("rexecd.KeyType", KeyType_name, KeyType_value)
	proto.RegisterType((*RegisterHostRequest)(nil), "rexecd.RegisterHostRequest")
	proto.RegisterType((*HostConnect)(nil), "rexecd.HostConnect")
	proto.RegisterType((*RegisterHostResponse)(nil), "rexecd.RegisterHostResponse")
	proto.RegisterType((*RegisterUserRequest)(nil), "rexecd.RegisterUserRequest")
	proto.RegisterType((*RegisterUserResponse)(nil), "rexecd.RegisterUserResponse")
	proto.RegisterType((*CommandRequest)(nil), "rexecd.CommandRequest")
	proto.RegisterType((*CommandResponse)(nil), "rexecd.CommandResponse")
}

func init() { proto.RegisterFile("rexecd.proto", fileDescriptor_a5a97cdcf024307f) }

var fileDescriptor_a5a97cdcf024307f = []byte{
	// 589 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xbf, 0x4e, 0xdc, 0x4e,
	0x10, 0x66, 0xcf, 0xc7, 0xfd, 0x99, 0xb3, 0xee, 0xac, 0x05, 0x81, 0x05, 0xfc, 0x7e, 0x39, 0xb9,
	0x48, 0x4e, 0x14, 0x28, 0x98, 0x18, 0x25, 0x4d, 0x1a, 0x9a, 0x48, 0x48, 0x29, 0x56, 0xa4, 0xb6,
	0x8c, 0x77, 0xc8, 0xad, 0xc0, 0x7f, 0xd8, 0xdd, 0x8b, 0x70, 0x9d, 0x36, 0x6f, 0x91, 0x2a, 0x4f,
	0x93, 0x77, 0xc8, 0x93, 0x44, 0xbb, 0xb6, 0xc1, 0x07, 0x57, 0xa4, 0x9b, 0xf9, 0x3e, 0xcf, 0xf8,
	0x9b, 0x6f, 0xc6, 0x06, 0x57, 0xe2, 0x03, 0xa6, 0xfc, 0xa4, 0x94, 0x85, 0x2e, 0xe8, 0xa0, 0xce,
	0x82, 0x5f, 0x04, 0x76, 0x18, 0x7e, 0x15, 0x4a, 0xa3, 0xfc, 0x54, 0x28, 0xcd, 0xf0, 0x7e, 0x85,
	0x4a, 0x53, 0x0a, 0xfd, 0x9b, 0x7b, 0x9e, 0xfb, 0x64, 0x4e, 0x16, 0x63, 0x66, 0x63, 0x83, 0x95,
	0x85, 0xd4, 0x7e, 0x6f, 0x4e, 0x16, 0x0e, 0xb3, 0x31, 0x7d, 0x05, 0x93, 0x52, 0x8a, 0x6f, 0x89,
	0xc6, 0xf8, 0x16, 0x2b, 0xdf, 0x99, 0x93, 0x85, 0xcb, 0xa0, 0x81, 0x2e, 0xb1, 0xa2, 0xff, 0x01,
	0x94, 0xab, 0xeb, 0x3b, 0x91, 0x5a, 0xbe, 0x6f, 0xf9, 0x71, 0x8d, 0x18, 0xfa, 0x18, 0x46, 0xb7,
	0x58, 0xc5, 0xba, 0x2a, 0xd1, 0xdf, 0x9e, 0x93, 0xc5, 0x34, 0x9c, 0x9d, 0x34, 0x42, 0x2f, 0xb1,
	0xba, 0xaa, 0x4a, 0x64, 0xc3, 0xdb, 0x3a, 0x08, 0x22, 0x98, 0x18, 0x89, 0x17, 0x45, 0x9e, 0x63,
	0xfa, 0xcf, 0x12, 0x83, 0xd7, 0xb0, 0xbb, 0x3e, 0xa1, 0x2a, 0x8b, 0x5c, 0x21, 0x9d, 0x42, 0x4f,
	0x70, 0x5b, 0xed, 0xb0, 0x9e, 0xe0, 0xc1, 0xf7, 0x8e, 0x15, 0x5f, 0x14, 0xca, 0xd6, 0x8a, 0x03,
	0x18, 0xad, 0x14, 0xca, 0x3c, 0xc9, 0xb0, 0x79, 0xd7, 0x63, 0x6e, 0xa6, 0xbb, 0x11, 0x52, 0xe9,
	0xd8, 0xb2, 0x3d, 0xcb, 0x8e, 0x2d, 0xf2, 0xd9, 0xd0, 0x87, 0x30, 0xbe, 0x4b, 0x5a, 0xd6, 0xa9,
	0x6b, 0x0d, 0x60, 0xc9, 0x5d, 0xd8, 0x4e, 0x78, 0x26, 0x72, 0x6b, 0xca, 0x88, 0xd5, 0x49, 0xb0,
	0xf7, 0xa4, 0xb6, 0x16, 0x51, 0xab, 0x0d, 0x7e, 0x13, 0x98, 0x5e, 0x14, 0x59, 0x96, 0xe4, 0xbc,
	0x15, 0xf6, 0x6c, 0x00, 0xea, 0x81, 0x93, 0x66, 0xbc, 0x51, 0x61, 0xc2, 0x35, 0xe9, 0xce, 0x33,
	0xe9, 0xe7, 0xe0, 0x2e, 0x0b, 0xa5, 0xe3, 0xb4, 0xb6, 0xd3, 0xef, 0xcf, 0x9d, 0xc5, 0x24, 0xdc,
	0x69, 0xdd, 0xef, 0x38, 0xcd, 0x26, 0xcb, 0x8e, 0xed, 0x6f, 0x60, 0xa6, 0x74, 0x22, 0x75, 0xac,
	0x45, 0x86, 0x4a, 0x27, 0x59, 0x69, 0x17, 0xd7, 0x67, 0x53, 0x0b, 0x5f, 0xb5, 0x28, 0xfd, 0x1f,
	0x80, 0x0b, 0xa5, 0xa5, 0xb8, 0x5e, 0x69, 0xf4, 0x07, 0x76, 0xc8, 0x0e, 0x12, 0xfc, 0x20, 0x30,
	0x7b, 0x9c, 0x68, 0xf3, 0x4e, 0xe8, 0x1e, 0x0c, 0x94, 0xe6, 0xc5, 0xaa, 0xde, 0xa8, 0xcb, 0x9a,
	0xac, 0xc1, 0x51, 0xca, 0xe6, 0xe2, 0x9a, 0x8c, 0x1e, 0xc1, 0xf8, 0x49, 0x56, 0xdf, 0xb6, 0x79,
	0x02, 0xcc, 0x3a, 0xf0, 0x41, 0x98, 0x91, 0x79, 0x7d, 0x6d, 0x0e, 0x1b, 0x19, 0xe0, 0xa2, 0xe0,
	0x78, 0xfc, 0x93, 0xc0, 0xb0, 0x39, 0x39, 0x3a, 0x81, 0xa1, 0x52, 0xcb, 0x58, 0xaa, 0xc4, 0xdb,
	0xa2, 0x1e, 0xb8, 0x52, 0x25, 0xb1, 0x5a, 0x26, 0x61, 0x1c, 0x46, 0xe7, 0x1e, 0x59, 0x43, 0xa2,
	0xd3, 0xd0, 0xeb, 0xb5, 0x05, 0x5c, 0x25, 0x9e, 0x43, 0xf7, 0x61, 0x07, 0x53, 0xde, 0x3e, 0x90,
	0x0b, 0xa5, 0x4b, 0x53, 0xd7, 0xdf, 0x44, 0x9c, 0xbd, 0x7f, 0xe7, 0x6d, 0x6f, 0x22, 0xa2, 0xf0,
	0xd4, 0x1b, 0xd0, 0x19, 0x4c, 0x4c, 0x5f, 0xe4, 0x61, 0x14, 0x9d, 0x7e, 0xf0, 0x86, 0xe1, 0x1f,
	0x02, 0x03, 0x66, 0x37, 0x44, 0x3f, 0xc2, 0xb0, 0xb1, 0x8f, 0xee, 0xb5, 0x5b, 0x5b, 0xbf, 0x90,
	0x83, 0xfd, 0x17, 0x78, 0x73, 0x4d, 0x5b, 0x6f, 0x09, 0xbd, 0x04, 0xb7, 0xfb, 0x5d, 0xd0, 0xc3,
	0xf6, 0xe1, 0x0d, 0xff, 0x83, 0x83, 0xa3, 0xcd, 0x64, 0xdb, 0xae, 0xdb, 0xcc, 0x9c, 0xed, 0xcb,
	0x66, 0x9d, 0x2f, 0xea, 0x65, 0xb3, 0xb5, 0x4b, 0xdf, 0xba, 0x1e, 0xd8, 0x7f, 0xd4, 0xd9, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x3d, 0x1c, 0x3f, 0xb3, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RexecdClient is the client API for Rexecd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RexecdClient interface {
	Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (Rexecd_CommandClient, error)
	RegisterHost(ctx context.Context, in *RegisterHostRequest, opts ...grpc.CallOption) (*RegisterHostResponse, error)
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
}

type rexecdClient struct {
	cc *grpc.ClientConn
}

func NewRexecdClient(cc *grpc.ClientConn) RexecdClient {
	return &rexecdClient{cc}
}

func (c *rexecdClient) Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (Rexecd_CommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Rexecd_serviceDesc.Streams[0], "/rexecd.Rexecd/Command", opts...)
	if err != nil {
		return nil, err
	}
	x := &rexecdCommandClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Rexecd_CommandClient interface {
	Recv() (*CommandResponse, error)
	grpc.ClientStream
}

type rexecdCommandClient struct {
	grpc.ClientStream
}

func (x *rexecdCommandClient) Recv() (*CommandResponse, error) {
	m := new(CommandResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rexecdClient) RegisterHost(ctx context.Context, in *RegisterHostRequest, opts ...grpc.CallOption) (*RegisterHostResponse, error) {
	out := new(RegisterHostResponse)
	err := c.cc.Invoke(ctx, "/rexecd.Rexecd/RegisterHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rexecdClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/rexecd.Rexecd/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RexecdServer is the server API for Rexecd service.
type RexecdServer interface {
	Command(*CommandRequest, Rexecd_CommandServer) error
	RegisterHost(context.Context, *RegisterHostRequest) (*RegisterHostResponse, error)
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
}

func RegisterRexecdServer(s *grpc.Server, srv RexecdServer) {
	s.RegisterService(&_Rexecd_serviceDesc, srv)
}

func _Rexecd_Command_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CommandRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RexecdServer).Command(m, &rexecdCommandServer{stream})
}

type Rexecd_CommandServer interface {
	Send(*CommandResponse) error
	grpc.ServerStream
}

type rexecdCommandServer struct {
	grpc.ServerStream
}

func (x *rexecdCommandServer) Send(m *CommandResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Rexecd_RegisterHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RexecdServer).RegisterHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rexecd.Rexecd/RegisterHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RexecdServer).RegisterHost(ctx, req.(*RegisterHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rexecd_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RexecdServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rexecd.Rexecd/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RexecdServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rexecd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rexecd.Rexecd",
	HandlerType: (*RexecdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterHost",
			Handler:    _Rexecd_RegisterHost_Handler,
		},
		{
			MethodName: "RegisterUser",
			Handler:    _Rexecd_RegisterUser_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Command",
			Handler:       _Rexecd_Command_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rexecd.proto",
}
